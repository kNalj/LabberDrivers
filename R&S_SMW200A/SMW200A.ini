# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: R&S Vector Signal Generator

# The version string should be updated whenever changes are made to this config file
version: 1

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: SMW200A


[Model and options]
# The option section allow instruments with different options to use the same driver

# Check instrument model id at startup (True or False). Default is False
check_model: False

# List of models supported by this driver
model_str_1: SMW100A


# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: True

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 2

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication.
query_instr_errors: False

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init:

# Final commands sent to the instrument when closing the driver
final:

# Send Go-to-local over GPIB interface after closing instrument
gpib_go_to_local: True

# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.


[Frequency]
label: Frequency
datatype: DOUBLE
unit: Hz
low_lim: 100000
high_lim: 20000000000
get_cmd: SOUR:FREQ?
set_cmd: SOUR_FREQ <*>

[Phase]
label: Phase
datatype: DOUBLE
unit: Deg
low_lim: -360
high_lim: 360
get_cmd: SOUR:PHAS?
set_cmd: SOUR:PHAS <*>

[Power]
label: Power
datatype: DOUBLE
unit:
low_lim: -60
high_lim: 30
get_cmd: SOUR:POW?
set_cmd: SOUR:POW <*>

[Output]
label: RF State
datatype: BOOLEAN
get_cmd: OUTP:STAT?
set_cmd: OUTP:STAT <*>
